import {
  to = segment_reverse_etl_model.id-rjUwD2eWUK3koQAw9caK8M
  id = "rjUwD2eWUK3koQAw9caK8M"
}

resource "segment_reverse_etl_model" "id-rjUwD2eWUK3koQAw9caK8M" {
  description             = "Programatically generated rETL model that is associated with an Engage rETL audience"
  enabled                 = true
  name                    = "VIP Negative Reviews"
  query                   = "WITH ID_GRAPH AS (\n    SELECT updates.segment_id, updates.canonical_segment_id\n    FROM \"ACOGBILL_DEMO\".\"COGBILL_MARKETING_PROD\".ID_GRAPH_UPDATES AS updates\n    LEFT JOIN \"ACOGBILL_DEMO\".\"COGBILL_MARKETING_PROD\".ID_GRAPH_UPDATES AS updates2 ON updates2.segment_id = updates.canonical_segment_id\n        AND CAST(updates.uuid_ts AS DATETIME) < DATEADD(HOUR, 2, updates2.UUID_TS)\n        AND updates2.canonical_segment_id <> updates2.segment_id\n        AND updates2.canonical_segment_id <> updates.canonical_segment_id\n), PROFILE_TRAITS AS (\n    WITH last_profile_traits_updates AS (\n        SELECT *, ROW_NUMBER() OVER(PARTITION BY segment_id ORDER BY CASE WHEN seq IS NULL THEN '0' ELSE seq END DESC) AS last_record\n        FROM \"ACOGBILL_DEMO\".\"COGBILL_MARKETING_PROD\".PROFILE_TRAITS_UPDATES AS updates\n    )\n    SELECT DISTINCT COALESCE(id_graph.canonical_segment_id,updates.segment_id) AS canonical_segment_id,\n        LAST_VALUE(updates.\"EMAIL\" IGNORE NULLS)\n            OVER(PARTITION BY COALESCE(id_graph.canonical_segment_id,updates.segment_id) ORDER BY updates.seq\n                ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS \"EMAIL\",\n        LAST_VALUE(updates.\"LIFETIME_VALUE_LTV\" IGNORE NULLS)\n            OVER(PARTITION BY COALESCE(id_graph.canonical_segment_id,updates.segment_id) ORDER BY updates.seq\n                ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS \"LIFETIME_VALUE_LTV\"\n    FROM last_profile_traits_updates AS updates\n    FULL OUTER JOIN ID_GRAPH AS id_graph ON id_graph.segment_id = updates.segment_id\n    AND updates.last_record = 1\n), EXTERNAL_ID_MAPPING AS (\n    SELECT COALESCE(id_graph.canonical_segment_id,ids.segment_id) AS canonical_segment_id, ids.external_id_type, ids.external_id_value\n    FROM \"ACOGBILL_DEMO\".\"COGBILL_MARKETING_PROD\".EXTERNAL_ID_MAPPING_UPDATES AS ids\n    LEFT JOIN ID_GRAPH AS id_graph ON id_graph.segment_id = ids.segment_id\n), ECG_1 AS (\n\tWITH filtered_query AS (\n\t\tSELECT A.\"CANONICAL_SEGMENT_ID\" AS \"A_CANONICAL_SEGMENT_ID\", B.\"ID\" AS \"B_ID\", TO_VARCHAR(CONVERT_TIMEZONE('UTC', B.\"TIMESTAMP\"), 'YYYY-MM-DD\"T\"HH24:MI:SSTZH:TZM') AS \"B_TIMESTAMP\", TO_VARCHAR(CONVERT_TIMEZONE('UTC', B.\"ORIGINAL_TIMESTAMP\"), 'YYYY-MM-DD\"T\"HH24:MI:SSTZH:TZM') AS \"B_ORIGINAL_TIMESTAMP\", B.\"PRODUCT_CATEGORY\" AS \"B_PRODUCT_CATEGORY\", B.\"PRODUCT_DESCRIPTION\" AS \"B_PRODUCT_DESCRIPTION\", B.\"PRODUCT_NAME\" AS \"B_PRODUCT_NAME\"\n\t\tFROM \"ACOGBILL_DEMO\".\"SHOP_ENRICHED\".\"PRODUCT_REVIEW\" B\n\t\tINNER JOIN EXTERNAL_ID_MAPPING A ON A.\"EXTERNAL_ID_TYPE\" = 'user_id' AND A.\"EXTERNAL_ID_VALUE\" = CAST(B.\"USER_ID\" AS STRING)\n\t\tWHERE ((B.\"SENTIMENT_SCORE\" < 0) and (B.\"WILL_BUY_AGAIN\" LIKE '%FALSE%' ESCAPE '\\\\'))\n\t)\n\tSELECT * FROM filtered_query\n), ECG_1_SEGMENT_ID AS (\n\tSELECT \"A_CANONICAL_SEGMENT_ID\" AS \"CANONICAL_SEGMENT_ID\" FROM ECG_1 GROUP BY \"A_CANONICAL_SEGMENT_ID\"\n), PROFILE_FILTER AS (\n\tSELECT CANONICAL_SEGMENT_ID FROM PROFILE_TRAITS PT\n\tWHERE ((CANONICAL_SEGMENT_ID IN (SELECT CANONICAL_SEGMENT_ID FROM ECG_1_SEGMENT_ID)) and (PT.\"LIFETIME_VALUE_LTV\" > 1000) and (PT.\"EMAIL\" IS NOT NULL))\n), ECG_1_FILTERED AS (\n\tSELECT * FROM ECG_1 WHERE \"A_CANONICAL_SEGMENT_ID\" IN (SELECT CANONICAL_SEGMENT_ID FROM PROFILE_FILTER)\n)\nSELECT DISTINCT * FROM (\n\tSELECT CANONICAL_SEGMENT_ID as matchId, NULL AS \"1_TIMESTAMP\", NULL AS \"1_ORIGINAL_TIMESTAMP\", NULL AS \"1_PRODUCT_CATEGORY\", NULL AS \"1_PRODUCT_DESCRIPTION\", NULL AS \"1_PRODUCT_NAME\"\n\tFROM PROFILE_FILTER\n\tUNION ALL\n\tSELECT CONCAT_WS(':', \"A_CANONICAL_SEGMENT_ID\", '1', REPLACE(\"B_ID\", ':', '::')) as matchId, \"B_TIMESTAMP\", \"B_ORIGINAL_TIMESTAMP\", \"B_PRODUCT_CATEGORY\", \"B_PRODUCT_DESCRIPTION\", \"B_PRODUCT_NAME\"\n\tFROM ECG_1_FILTERED\n)"
  query_identifier_column = "matchId"
  source_id               = "wLoTFxk9DuredsGx6ECmgJ"
}